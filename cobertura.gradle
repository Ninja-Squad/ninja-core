configurations {
    coberturaInstrument {
        transitive = true
    }
    cobertura {
        transitive = false
    }
}

dependencies {   
    coberturaInstrument 'net.sourceforge.cobertura:cobertura:1.9.4.1'
    cobertura 'net.sourceforge.cobertura:cobertura:1.9.4.1'
}

task cover(dependsOn: 'test') << {
    // create cobertura reports
    ant.'cobertura-report'(destdir:"${project.reporting.baseDir}/coverage", 
                           format:'xml',
                           datafile: "${project.buildDir}/cobertura.ser") {
        sourceSets.main.allJava
    }
    ant.'cobertura-report'(destdir:"${project.reporting.baseDir}/coverage",
                           format:'html',
                           datafile: "${project.buildDir}/cobertura.ser") {
        sourceSets.main.allJava.addToAntBuilder(ant, 'fileset', FileCollection.AntType.FileSet)
    }
}

gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(cover)) {
        ant.taskdef(resource: 'tasks.properties', classpath: configurations.coberturaInstrument.asPath)
        test.doFirst { task ->
            systemProperties 'net.sourceforge.cobertura.datafile': "${project.buildDir}/cobertura.ser"
            // delete data file for cobertura, otherwise coverage would be added
            ant.delete(file: "${project.buildDir}/*.ser", failonerror:false)
            // delete copy of original classes
            ant.delete(dir: "${project.buildDir}/classes/main-instrumented", failonerror: false)
               
            // create copy of original class files
            ant.copy(todir: "${project.buildDir}/classes/main-instrumented") {
                fileset(dir: sourceSets.main.output.classesDir)
            }
            // instrument the classes in-place
            ant.'cobertura-instrument'(datafile: "${project.buildDir}/cobertura.ser") {
                // only instrument the relevant classes
                fileset(dir: "${project.buildDir}/classes/main-instrumented",
                        includes: "**/*.class")
            }
            // make sure that cobertura is in the test class path
            task.classpath = task.classpath.minus(files(sourceSets.main.output.classesDir)).plus(configurations.cobertura).plus(files("${project.buildDir}/classes/main-instrumented"))
        }
    }
}

build.dependsOn cover